extends layout
block content
    #map
    
    script(type='text/javascript').
        var map = L.map('map').setView([#{mapdata.lat}, #{mapdata.lon}], 10);
        L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {
            attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="http://mapbox.com">Mapbox</a>',
            maxZoom: 18,
            id: 'mapbox.streets',
            accessToken: '#{mapdata.key}'
        }).addTo(map);        

        var markerseq = 0;
        var done = false;
        var info = {
            id: '#{mapdata.clientid}',
            lat: #{mapdata.lat}, 
            lon: #{mapdata.lon}
        };
        
        var client = null;
        function init_client() {
            client = io.connect('/client', {
                'forceNew': true,
                'reconnection': true,
                'reconnectionDelay': 1000,
                'reconnectionMaxDelay': 6000,
                'reconnectionAttempts': 6
            });
            
            // socket.io client events
            client.on('connect', function() { 
                if(!done) {   
                    console.log('client -- ' + client);
                    console.log('info -- ' + info);
                    client.emit('hello', JSON.stringify(info));
                } else {
                    client.disconnect();
                }
            });
            client.on('reconnect_failed', function() {
                if(!done) {
                    client.disconnect();
                    setTimeout(function() {
                        init_client();
                    }, 3000);
                } else  {
                    client = null;
                }
            });
            client.on('disconnect', function() {
                client = null;
            });
            client.on('error', function(err) {
                console.log('Error: ' + err);
            });
            client.on('reconnect_error', function(err) {
                console.log('Reconnect error: ' + err);
            });
            
            // socket.io application events
            client.on('status', function() {
                console.log('Request for client status.');
                client.emit('status', JSON.stringify({ 
                    markerseq: markerseq,
                    done: done
                }));
            });
            client.on('done', function() {
                console.log('Marker streaming done.');
                done = true;
                client.disconnect();
            });
            client.on('point', function(data) {
                console.log("Got point: " + data);
                info = JSON.parse(data);
                var marker = L.marker([info.latitude, info.longitude]).addTo(map);
                marker.bindPopup("<a href=\"" + info.link + "\">" + info.name + "</a>");
                markerseq++;
            });
        }
        init_client();
        
        